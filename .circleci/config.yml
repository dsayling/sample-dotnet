jobs:
  build-and-test:  # This is the name of the job, feel free to change it to better match what you're trying to do!
    # These next lines defines a docker executors: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from dockerhub or use one of the convenience images from CircleCI's Developer Hub
    docker:
      # Be sure to upate the tag on this image to a more stable version, using latest can result in unstable builds.
      - image: microsoft/dotnet:latest
    steps:
      # Checkout the code as the first step.
      # Then simply use the dotnet container as you'd expect and run your tests
      # CircleCI will report the results back to your VCS provider.
      - checkout
      - run:
          # Update this line with the directory that contains your tests project file
          working_directory: ~/project/App.Tests
          name: Run tests
          command: |
            dotnet test
            
workflows:
  sample:  # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run. 
    # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows 
    jobs:
      - build-and-test
      
# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
